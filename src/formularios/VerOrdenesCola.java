/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import java.awt.Image;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import clases.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Properties;
import javax.mail.Address;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import java.awt.Color;

/**
 *
 * @author steven
 */
public class VerOrdenesCola extends javax.swing.JPanel {

    /**
     * Creates new form VerOrdenesCola
     */
    DefaultComboBoxModel modeloComboCliente;
    DefaultComboBoxModel modeloComboPresupuestos;
    DefaultComboBoxModel modeloComboEstados;
    DefaultComboBoxModel modeloComboEstados2;
    DefaultTableModel modeloTablaProductos;
    
    Conexion con = new Conexion();
    verificaciones verificar = new verificaciones();
    String correo;
    public static final Color greenD = new Color(217,179,16);
    
    public VerOrdenesCola(String correoE) {
//        try {
//                     UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
//		}
//		catch (Exception e) {
//		}
        modeloComboCliente = new DefaultComboBoxModel(new String[]{});
        modeloComboPresupuestos = new DefaultComboBoxModel(new String[]{});
        modeloComboEstados = new DefaultComboBoxModel(new String[]{});
        modeloComboEstados2 = new DefaultComboBoxModel(new String[]{});
        
        modeloTablaProductos = new DefaultTableModel(null, getColumnasProductos());
        
        initComponents();
        correo=correoE;
        llenaComboBoxClientes();
        llenaComboBoxEstados();
        llenaComboBoxEstados2();
        
        ImageIcon foto0 = new ImageIcon (getClass().getResource("/images/help.png"));
        ImageIcon icono0 = new ImageIcon(foto0.getImage().getScaledInstance(25,25,Image.SCALE_DEFAULT));
        lblhelp.setIcon(icono0);
        
        String[] valoresC = getColumnasProductos();
        TableColumnModel columnModel = jTable1.getColumnModel();
        System.out.println("tama√±o: "+valoresC.length);
        for (int i = 0; i <valoresC.length; i++) {
            columnModel.getColumn(i).setPreferredWidth(valoresC[i].length()*9);
            System.out.println("entra");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblFechaVencimiento = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        fecha = new com.toedter.calendar.JDateChooser();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        lblhelp = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 1), new java.awt.Dimension(0, 1), new java.awt.Dimension(32767, 1));
        jButton6 = new javax.swing.JButton();

        setBackground(new java.awt.Color(30, 57, 42));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(60, 196, 124), 3));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jTable1.setModel(modeloTablaProductos);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(0, 153, 51));
        jTable1.setSelectionBackground(new java.awt.Color(0, 204, 51));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 390, 140));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(60, 196, 124));
        jLabel10.setText("Detalle de Pedido");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, -1, -1));

        jComboBox1.setModel(modeloComboCliente);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 130, 30));

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Fecha Limite:");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, -1, 20));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(60, 196, 124));
        jLabel11.setText("Gestion de Pedidos");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        lblFechaVencimiento.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        lblFechaVencimiento.setForeground(new java.awt.Color(255, 255, 255));
        lblFechaVencimiento.setText("Viernes 02 Julio 2018");
        add(lblFechaVencimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, -1, 20));

        jPanel1.setBackground(new java.awt.Color(30, 57, 42));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar Estado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("*Se notificara al cliente y administrador");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 200, 30));

        jComboBox2.setModel(modeloComboEstados2);
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 150, 30));

        jLabel20.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Motivo:");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, 30));

        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 260, 80));

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Aplazar Pedido");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jButton4.setContentAreaFilled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 140, 30));

        fecha.setDateFormatString("yyyy-MM-dd");
        jPanel1.add(fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 150, 30));

        jLabel23.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Nuevo Estado:");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, 30));

        jLabel24.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Nuevo Estado:");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, 30));

        jButton7.setBackground(new java.awt.Color(51, 51, 51));
        jButton7.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Modificar Estado");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jButton7.setContentAreaFilled(false);
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton7MouseExited(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 140, 60));

        jLabel26.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Fecha Limite:");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 550, 200));

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Iniciar");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jButton5.setContentAreaFilled(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 140, 30));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/minimizar.png"))); // NOI18N
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 0, -1, -1));

        lblhelp.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblhelpAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        lblhelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblhelpMouseClicked(evt);
            }
        });
        add(lblhelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 25, 25));

        jLabel21.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Cliente:");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, 30));

        jComboBox3.setModel(modeloComboPresupuestos);
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 130, 30));

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Presupuesto:");
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, -1, 30));

        jLabel25.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Estado Pedido:");
        add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, -1, 30));

        jComboBox4.setModel(modeloComboEstados);
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 120, 30));
        add(filler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 60, 110));

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Finalizar Pedido");
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jButton6.setContentAreaFilled(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6MouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, 140, 30));
    }// </editor-fold>//GEN-END:initComponents
    
    private String[] getColumnasProductos() {
        String columnas[] = new String[]{"#","CODIGO", "NOMBRE", "CATEGORIA","$ UNIT.","CANTIDAD","SUBTOTAL"};
        return columnas;
    }
    
    private void llenaComboBoxClientes() {
        modeloComboCliente.removeAllElements();
        try {
                
            /* Realizamos la consulta a la base de datos*/
            String sql = "SELECT idCliente, correoElectronico FROM cliente";
            PreparedStatement verDatos = con.conectar().prepareStatement(sql);
            ResultSet ver = verDatos.executeQuery();
            while (ver.next()) {

                modeloComboCliente.addElement(ver.getObject("correoElectronico"));
            }

        } catch (SQLException ex) {
            System.out.println("Error: " + ex);
        }
    }
    private void llenaComboBoxEstados() {
        modeloComboEstados.removeAllElements();
        try {
                
            /* Realizamos la consulta a la base de datos*/
            String sql = "SELECT nombre FROM estadoPedido";
            PreparedStatement verDatos = con.conectar().prepareStatement(sql);
            ResultSet ver = verDatos.executeQuery();
            while (ver.next()) {

                modeloComboEstados.addElement(ver.getObject("nombre"));
            }
                modeloComboEstados.addElement("Todos");
        } catch (SQLException ex) {
            System.out.println("Error: " + ex);
        }
    }
    
    private void llenaComboBoxEstados2() {
        modeloComboEstados2.removeAllElements();
        try {
                
            /* Realizamos la consulta a la base de datos*/
            String sql = "SELECT nombre FROM estadoPedido";
            PreparedStatement verDatos = con.conectar().prepareStatement(sql);
            ResultSet ver = verDatos.executeQuery();
            while (ver.next()) {

                modeloComboEstados2.addElement(ver.getObject("nombre"));
            }
                
        } catch (SQLException ex) {
            System.out.println("Error: " + ex);
        }
    }
    private void llenaComboBoxPresupuestos(int tipo) {
        modeloComboPresupuestos.removeAllElements();
        try {
            
            /* Realizamos la consulta a la base de datos*/
            String sql2="SELECT idCliente FROM cliente WHERE correoElectronico='"+jComboBox1.getSelectedItem()+"'";
            
            PreparedStatement verDatos2 = con.conectar().prepareStatement(sql2);
            ResultSet ver2 = verDatos2.executeQuery();
            
            if(ver2.next()) {
                String sql = "";
                switch (tipo) {
                    case 1:
                        sql="SELECT idPedido FROM pedido WHERE idCliente="+ver2.getInt(1)+" AND idEstadoP="+idEstado;
                        break;
                    default:
                        sql="SELECT idPedido FROM pedido WHERE idCliente="+ver2.getInt(1)+" AND idEstadoP>=1";
                        break;
                }
                PreparedStatement verDatos = con.conectar().prepareStatement(sql);
                ResultSet ver = verDatos.executeQuery();
                while (ver.next()) {
                    
                    modeloComboPresupuestos.addElement(ver.getObject("idPedido"));
                }
            }else{
                modeloComboPresupuestos.addElement("Inexistente");
            }   

        } catch (SQLException ex) {
            System.out.println("Error: " + ex);

        }
    }
    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4MouseExited

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseExited

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int resp= JOptionPane.showConfirmDialog(null, "¬øSeguro que quiere Iniciar este pedido?","Confirmacion", JOptionPane.YES_NO_OPTION);
        if (resp==JOptionPane.YES_OPTION) {
            try {
                String sql = "UPDATE pedido SET idEstadoP=4 WHERE idPedido = " + jComboBox3.getSelectedItem();
                PreparedStatement cmd = con.conectar().prepareStatement(sql);
                if (!cmd.execute()) {
                    JOptionPane.showMessageDialog(this, "Has iniciado este pedido");
                } else {
                    JOptionPane.showMessageDialog(this, "Error al iniciar pedido");
                }
            } catch (Exception e) {
                System.out.println("Error al iniciar: " + e);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Pedido NO Iniciado");
        }    
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        this.hide();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void lblhelpAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblhelpAncestorAdded
        // TODO add your handling code here:

    }//GEN-LAST:event_lblhelpAncestorAdded

    private void lblhelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblhelpMouseClicked
        // TODO add your handling code here:
        //y cuando llames el formulario ayuda en vez del 0 le vas a poner el form que le corresponda 1 2 o 3 y asi sucesivamente, si vos elegis el orden
        /**
        * ahorita, llena los textos de ayuda de todos los forms, luego vemos lo de las imagenes , me avisas cuando temrines de escribir las instrucciones
        */
        help form = new help(16);
        form.show();
    }//GEN-LAST:event_lblhelpMouseClicked

    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6MouseExited

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int resp= JOptionPane.showConfirmDialog(null, "¬øSeguro que quiere finalizar este pedido?","Confirmacion", JOptionPane.YES_NO_OPTION);
        if (resp==JOptionPane.YES_OPTION) {
            try {
                String sql = "UPDATE pedido SET idEstadoP=2 WHERE idPedido = " + jComboBox3.getSelectedItem();
                PreparedStatement cmd = con.conectar().prepareStatement(sql);
                if (!cmd.execute()) {
                    JOptionPane.showMessageDialog(this, "Has finalizado este pedido");
                } else {
                    JOptionPane.showMessageDialog(this, "Error al finalizar pedido");
                }
            } catch (Exception e) {
                System.out.println("Error al finalizar: " + e);
            }
        }else{
            JOptionPane.showMessageDialog(this,"Pedido NO finalizado");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox1ActionPerformed
    int indices=0;
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        Object datos[] = new Object[7];
        indices=0;
         int filas = modeloTablaProductos.getRowCount();
        for (int i = 0; filas > i; i++) {
            modeloTablaProductos.removeRow(0);
        }
        try {
            Conexion cn = new Conexion();
            String sql = "SELECT dp.idProducto , pro.nombreProducto , cat.nombreCategoria, cantidadProducto, fecha_vencimiento "
                    + " FROM pedido p, detallePedido dp, producto pro, categoriaProducto cat "
                    + " WHERE dp.idProducto=pro.idProducto  AND cat.idCategoria=pro.idCategoria "
                    + " AND p.idPedido=dp.idPedido AND dp.idPedido="+jComboBox3.getSelectedItem();
            PreparedStatement cmd = cn.conectar().prepareStatement(sql);
            ResultSet ver = cmd.executeQuery();
            while(ver.next()){
                for (int i = 0; i <6; i++) {
                    System.out.println("i: "+i);
                    if (i==1 || i==2 || i==3 ) {
                        datos[i]=ver.getObject(i);
                    }
                    if (i==0) {
                        datos[i]=indices;
                        indices++;
                    }
                    if (i==4) {
                        System.out.println("Entra");
                        String sql2 ="SELECT ((((porcentajeGanacia+impuestos)/100)*precioCompra)+precioCompra) "
                                + " FROM inventario "
                                + " WHERE idProductos= "+datos[1] +" ORDER BY porcentajeGanacia DESC ";
                        PreparedStatement cmd2 = cn.conectar().prepareStatement(sql2);
                        ResultSet ver2 = cmd2.executeQuery();
                        if (ver2.next()) {
                             DecimalFormat df = new DecimalFormat("#.00");
                            datos[i]= df.format(ver2.getDouble(1));
                            datos[i+1]= ver.getObject(4);
                            double data = Double.valueOf(String.valueOf((datos[i+1])))* Double.valueOf(String.valueOf((datos[i])));
                            
                            datos[i+2]= data;
                        }
                    }
                    if (i==5){
                        SimpleDateFormat Formato = new SimpleDateFormat("yyyy-MM-dd");
                        lblFechaVencimiento.setText(""+Formato.format(verificaciones.sumarFechasDias(ver.getDate(i),2)));
                        fecha.setDate(verificaciones.sumarFechasDias(ver.getDate(i),2));
                    }
                }
                
                modeloTablaProductos.addRow(datos);
            }
            
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_jComboBox3ActionPerformed
    int idEstado=1;
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "SELECT idEstadoP FROM estadoPedido WHERE nombre='" + jComboBox4.getSelectedItem() + "'";
            PreparedStatement cmd = con.conectar().prepareStatement(sql);
            ResultSet ver = cmd.executeQuery();
            if (jComboBox4.getSelectedItem().equals("Todos")) {
                llenaComboBoxPresupuestos(0);
                indices=0;
            } else {
                if (ver.next()) {
                    idEstado = ver.getInt(1);
                    System.out.println("estado: " + ver.getInt(1));
                }
                llenaComboBoxPresupuestos(1);
                indices=0;
            }
            
        } catch (Exception e) {
            
        }
        
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7MouseEntered

    private void jButton7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7MouseExited
    private static boolean enviarConGMail( String destinatario, String asunto, String cuerpo) {
        // Esto es lo que va delante de @gmail.com en tu cuenta de correo. Es el remitente tambi√©n.
        /**
         * Todo esto ya funciona , no tocar
         */
        
        boolean retorno=false;
        String remitente = "sbdflores";

        Properties props = System.getProperties();

        props.put (

        "mail.smtp.host", "smtp.gmail.com");  //El servidor SMTP de Google
        props.put (

        "mail.smtp.user", remitente);
        props.put (

        "mail.smtp.clave", "FCBarcelona123");    //La clave de la cuenta
        props.put (

        "mail.smtp.auth", "true");    //Usar autenticaci√≥n mediante usuario y clave
        props.put (

        "mail.smtp.starttls.enable", "true"); //Para conectar de manera segura al servidor SMTP
        props.put (
        "mail.smtp.port", "587"); //El puerto SMTP seguro de Google

        Session session = Session.getDefaultInstance(props);
        MimeMessage message = new MimeMessage(session);


            try {
               
            Address test = new InternetAddress(destinatario);
                
            message.setFrom(new InternetAddress(remitente));
            message.addRecipient(Message.RecipientType.TO, test);   //Se podr√≠an a√±adir varios de la misma manera
            message.setSubject(asunto);
            message.setText(cuerpo);
            Transport transport = session.getTransport("smtp");
            transport.connect("smtp.gmail.com", remitente, "FCBarcelona123");
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
            retorno=true;
        }
        catch (MessagingException me) {
            me.printStackTrace();   //Si se produce un error
        }
            return retorno;
    }
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:    
        try {
            String sql = "SELECT idEstadoP FROM estadoPedido WHERE nombre='" + jComboBox2.getSelectedItem()+"'";
            PreparedStatement cmd = con.conectar().prepareStatement(sql);
            ResultSet ver = cmd.executeQuery();
            if (ver.next()) {
                try {
                    String sql2="UPDATE pedido SET idEstadoP="+ver.getInt(1)+", fecha_vencimiento='"+verificar.getFecha(fecha)+"' WHERE idPedido="+jComboBox3.getSelectedItem()+"";
                    PreparedStatement cmd2 = con.conectar().prepareStatement(sql2);
                    
                    if (!cmd2.execute()) {
                        String destinatario = String.valueOf(jComboBox1.getSelectedItem()); //A quien le quieres escribir.
                        String asunto = "Correo Importante 'Modificacion de Pedido #"+jComboBox3.getSelectedItem()+"' ";
                        String cuerpo = "Su pedido ha sido modificado, el nuevo estado es:  "
                                + jComboBox2.getSelectedItem()+"  , y la nueva fecha de vencimiento del pedido es: "
                                + verificar.getFecha(fecha) +"  \n Motivo : \n "+jTextArea1.getText()+" \n Atentemente: "+correo;
                        
                        //evaluamos si se envio el correo
                        System.out.println("destino: "+destinatario);
                        System.out.println("asunto: "+asunto);
                        System.out.println("cuerpo: "+cuerpo);
                        if (enviarConGMail(destinatario, asunto, cuerpo)) {
                            JOptionPane.showMessageDialog(this,"Se ha modificado correctamente el pedido");  
                        } else {
                            JOptionPane.showMessageDialog(this,"No enviado");
                        }
                    }
                } catch (Exception e) {
                    System.out.println("Error al modificar "+e);
                }
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser fecha;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblFechaVencimiento;
    private javax.swing.JLabel lblhelp;
    // End of variables declaration//GEN-END:variables
}
